function Board.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push argument 1
pop this 2
push argument 2
pop this 3
push argument 3
pop this 4
push constant 0
pop this 5
push constant 1
pop this 6
push constant 2
pop this 7
push pointer 0
call Board.initBoard 1
pop temp 0
push pointer 0
return
function Board.initBoard 3
push argument 0
pop pointer 0
push constant 3
call Array.new 1
pop this 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push constant 3
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push constant 3
call Array.new 1
pop local 2
label WHILE_EXP1
push local 1
push constant 3
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push this 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.getVal 3
push argument 0
pop pointer 0
push argument 1
push constant 8
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push pointer 0
push argument 1
push constant 3
call Board.modulo 3
pop local 2
push argument 1
push local 2
sub
push constant 3
call Math.divide 2
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 2
push local 0
add
pop pointer 1
push that 0
return
function Board.setVal 3
push argument 0
pop pointer 0
push pointer 0
push argument 1
push constant 3
call Board.modulo 3
pop local 2
push argument 1
push local 2
sub
push constant 3
call Math.divide 2
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 2
push local 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.drawX 0
push argument 0
pop pointer 0
push constant 0
return
function Board.drawO 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 3
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Board.drawBoard 5
push argument 0
pop pointer 0
push constant 0
pop local 3
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 3
push constant 4
lt
not
if-goto WHILE_END0
push this 1
push this 2
push this 3
push local 3
call Math.multiply 2
add
push this 1
push this 3
push constant 3
call Math.multiply 2
add
push this 2
push this 3
push local 3
call Math.multiply 2
add
push this 4
add
call Screen.drawRectangle 4
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 3
label WHILE_EXP1
push local 3
push constant 4
lt
not
if-goto WHILE_END1
push this 1
push this 3
push local 3
call Math.multiply 2
add
push this 2
push this 1
push this 3
push local 3
call Math.multiply 2
add
push this 4
add
push this 2
push this 3
push constant 3
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push this 3
push constant 2
call Math.divide 2
pop local 2
push constant 0
pop local 3
label WHILE_EXP2
push local 3
push constant 3
lt
not
if-goto WHILE_END2
push constant 0
pop local 4
label WHILE_EXP3
push local 4
push constant 3
lt
not
if-goto WHILE_END3
push local 3
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 4
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push this 6
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 100
push constant 100
push constant 40
call Board.drawX 4
pop temp 0
label IF_FALSE0
push local 1
push this 7
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 1
push local 4
push this 3
call Math.multiply 2
add
push local 2
add
push this 2
push local 3
push this 3
call Math.multiply 2
add
push local 2
add
push constant 10
call Board.drawO 4
pop temp 0
label IF_FALSE1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP3
label WHILE_END3
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP2
label WHILE_END2
push constant 0
return
function Board.printBoard 4
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 2
push constant 3
lt
not
if-goto WHILE_END0
push argument 1
push local 2
add
push argument 2
call Output.moveCursor 2
pop temp 0
push constant 0
pop local 3
push constant 1
call String.new 1
push constant 124
call String.appendChar 2
call Output.printString 1
pop temp 0
label WHILE_EXP1
push local 3
push constant 3
lt
not
if-goto WHILE_END1
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 3
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push this 6
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
call String.new 1
push constant 120
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_FALSE0
push local 1
push this 7
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
call String.new 1
push constant 111
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_FALSE1
push local 1
push this 5
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
label IF_FALSE2
push constant 1
call String.new 1
push constant 124
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.modulo 3
push argument 0
pop pointer 0
push argument 1
push argument 2
call Math.divide 2
pop local 0
push local 0
push argument 2
call Math.multiply 2
pop local 1
push argument 1
push local 1
sub
pop local 2
push local 2
return
