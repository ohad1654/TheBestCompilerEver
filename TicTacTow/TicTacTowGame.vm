function TicTacTowGame.constructLogger 4
push argument 0
pop pointer 0
push this 5
push this 7
sub
push constant 2
call Math.divide 2
pop local 0
push local 0
push this 7
add
pop local 1
push this 9
pop local 2
push this 9
push this 8
add
pop local 3
push local 0
push local 2
push local 1
push local 3
call Logger.new 4
pop this 1
push constant 0
return
function TicTacTowGame.new 0
push constant 11
call Memory.alloc 1
pop pointer 0
push constant 255
pop this 6
push constant 511
pop this 5
push constant 350
pop this 7
push constant 60
pop this 8
push constant 10
pop this 9
push constant 20
pop this 10
push pointer 0
call TicTacTowGame.constructLogger 1
pop temp 0
push constant 175
push this 8
push this 9
add
push this 10
add
push constant 50
push constant 3
call Board.new 4
pop this 0
push constant 0
pop this 2
push constant 1
pop this 3
push constant 2
pop this 4
push pointer 0
return
function TicTacTowGame.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function TicTacTowGame.run 5
push argument 0
pop pointer 0
push constant 1
pop local 3
push this 3
pop local 1
push this 0
call Board.drawBoard 1
pop temp 0
push this 1
call Logger.drawBorders 1
pop temp 0
push this 1
call Logger.printBoard 1
pop temp 0
label WHILE_START0
push local 0
push constant 0
eq
push local 4
push constant 9
lt
and
not
if-goto WHILE_END0
push this 1
push local 1
call Logger.getTurn 2
pop local 2
push this 0
push local 2
call Board.getVal 2
push this 2
eq
not
if-goto FALSE0
push this 1
call Logger.clearErrorMessage 1
pop temp 0
push this 0
push local 2
push local 1
call Board.setVal 3
pop temp 0
push pointer 0
call TicTacTowGame.calcWinner 1
pop local 0
push this 0
call Board.drawBoard 1
pop temp 0
push local 4
push constant 1
add
pop local 4
push local 1
push local 3
add
pop local 1
push local 3
push constant 1
neg
call Math.multiply 2
pop local 3
goto ENDIF0
label FALSE0
push this 1
push local 2
call Logger.printErrorSpotMessage 2
pop temp 0
label ENDIF0
goto WHILE_START0
label WHILE_END0
push this 1
push local 0
call Logger.printWinner 2
pop temp 0
push constant 0
return
function TicTacTowGame.calcWinner 2
push argument 0
pop pointer 0
label WHILE_START1
push local 0
push constant 3
lt
not
if-goto WHILE_END1
push local 0
push constant 3
call Math.multiply 2
pop local 1
push this 0
push local 1
call Board.getVal 2
push this 0
push local 1
push constant 1
add
call Board.getVal 2
eq
push this 0
push local 1
push constant 1
add
call Board.getVal 2
push this 0
push local 1
push constant 2
add
call Board.getVal 2
eq
and
not
if-goto FALSE1
push this 0
push local 1
call Board.getVal 2
return
goto ENDIF1
label FALSE1
label ENDIF1
push this 0
push local 0
call Board.getVal 2
push this 0
push constant 3
push local 0
add
call Board.getVal 2
eq
push this 0
push constant 3
push local 0
add
call Board.getVal 2
push this 0
push constant 6
push local 0
add
call Board.getVal 2
eq
and
not
if-goto FALSE2
push this 0
push local 0
call Board.getVal 2
return
goto ENDIF2
label FALSE2
label ENDIF2
push local 0
push constant 1
add
pop local 0
goto WHILE_START1
label WHILE_END1
push this 0
push constant 0
call Board.getVal 2
push this 0
push constant 4
call Board.getVal 2
eq
push this 0
push constant 4
call Board.getVal 2
push this 0
push constant 8
call Board.getVal 2
eq
and
not
if-goto FALSE3
push this 0
push constant 0
call Board.getVal 2
return
goto ENDIF3
label FALSE3
label ENDIF3
push this 0
push constant 2
call Board.getVal 2
push this 0
push constant 4
call Board.getVal 2
eq
push this 0
push constant 4
call Board.getVal 2
push this 0
push constant 6
call Board.getVal 2
eq
and
not
if-goto FALSE4
push this 0
push constant 2
call Board.getVal 2
return
goto ENDIF4
label FALSE4
label ENDIF4
push constant 0
return
